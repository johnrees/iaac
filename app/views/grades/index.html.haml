:css
  table.key * {
  font-size: 0.9em;
  padding: 2px 4px;
  }
.row
  .columns.large-12
    %ul.breadcrumbs
      %li= link_to "Courses", courses_path
      - @course.ancestors.reverse.each do |course|
        %li= link_to course, course
      %li= link_to @course, @course

.row
  .columns.large-12

    = title "Grades"

    %table.key
      %thead
        %tr
          %th{colspan: 2} Grade
          %th Explanation
      %tr
        %th 0-4
        %td FAIL
        %td This means that the student is not going to get his Master Degree, so this grade has to be justified and well explained
      %tr
        %th 4
        %td INCOMPLETE
        %td This means that the tutor has to offer another deadline in order to receive a second submission that he will grade again
      %tr
        %th 5-6
        %td LOW PASS
        %td
      %tr
        %th 7-8
        %td PASS
        %td
      %tr
        %th 9-10
        %td HIGH PASS
        %td

    #grades
      - @course.students.order(:last_name).each do |student|

        = simple_form_for [@course,Grade.for(student, @course, current_user)], remote: true do |f|
          = content_tag_for :table, student do
            %tr
              %th{width: 200}
                = link_to student, data: { reveal_id: "modal", reveal_ajax: "true" } do
                  = image_tag student.avatar, style: 'width: 50px; height: auto; margin-bottom: 5px;'
                  .student-name= student
                .grade
              - if @can_grade
                %td{width: 90}
                  = f.input_field :value, step: 0.01, id: "value-#{student.id}", placeholder: "0-10"
                %td{colspan: 1, style: 'background: none !important'}
                  = f.input_field :notes, placeholder: 'notes for the student...', id: "notes-#{student.id}"
                %td
                  = f.input_field :private_notes, placeholder: 'private notes for the TUTORS...', id: "private-notes-#{student.id}", class: 'private-notes'
                  = f.association :student, as: :hidden
                  = f.submit

            - @tutors.each do |tutor|
              - grade = Grade.for(student, @course, tutor)
              %tr.other-tutor
                %td= tutor
                %td= grade.try(:value)
                %td= grade.try(:notes)
                %td= grade.try(:private_notes)

      -# = link_to "Submit for Review", submit_for_review_course_grades_path(@course), method: :post, data: { confirm: "Are you sure you want to do this?"}, class: 'button'

  -# :javascript
  -#   TogetherJSConfig_autoStart = true
  -#   TogetherJSConfig_siteName = 'IAAC'
  -#   TogetherJSConfig_toolName = 'Collaboration'
  -#   TogetherJSConfig_getUserName = function() { return "#{current_user}"; }
  -#   TogetherJSConfig_dontShowClicks = true
  -#   TogetherJSConfig_cloneClicks = "table#grades input"
  -# = javascript_include_tag "https://togetherjs.com/togetherjs-min.js"
